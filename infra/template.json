{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the storage account."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[format('store{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the Storage Account"
            }
        },
        "sqlServerName": {
            "type": "string",
            "defaultValue": "[format('sql{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the SQL Server"
            }
        },        
        "identityName": {
            "type": "string",
            "defaultValue": "[format('uaid{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "The name of the user assigned identity used to setup SQL Server"
            }
        },
        "administratorLogin": {
            "type": "string",
            "defaultValue": "sqladmin",
            "metadata": {
                "description": "Admin login for the SQL Server"
            }
        },
        "administratorLoginPassword": {
            "type": "secureString",
            "metadata": {
                "description": "Admin password for the SQL Server"
            }
        },
        "updateGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "Guid used by the forceUpdateTag property to force execution of the script"
            }
        }
    },
    "variables": {
        "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]"
    },
    "resources": [    
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('identityName')]",
            "location": "westeurope"
        },  
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), resourceGroup().id, 'contributer')]",
            "properties": {
                "roleDefinitionId": "[variables('Owner')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))).principalId]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
            ]
        },         
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-09-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_0",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/bacpacs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-11-01-preview",
            "name": "[parameters('sqlServerName')]",
            "location": "[parameters('location')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-02-01-preview",
            "location": "[parameters('location')]",
            "name": "[concat(parameters('sqlServerName'), '/wwi')]",
            "properties": {
            },
            "sku": {
                "name": "S3",
                "tier": "Standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ] 
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(parameters('sqlServerName'), '/AllowAllWindowsAzureIps')]",
            "properties": {
                "endIpAddress": "0.0.0.0",
                "startIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('sqlServerName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "postDeploy",
            "location": "[resourceGroup().location]",
            "kind": "AzureCLI",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', 'bacpacs')]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('sqlServerName'), 'wwi')]"                
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": {}
                }
            },
            "properties": {
                "forceUpdateTag": "[parameters('updateGuid')]",
                "azCliVersion": "2.37.0",
                "timeout": "PT1H",
                "arguments": "",
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D",
                "environmentVariables": [
                    {
                      "name": "administratorLogin",
                      "value": "[parameters('administratorLogin')]"
                    },
                    {
                      "name": "administratorLoginPassword",
                      "secureValue": "[parameters('administratorLoginPassword')]"
                    },
                    {
                      "name": "storageAccountKey",
                      "secureValue": "[listKeys(variables('storageAccountResourceId'), '2021-09-01').keys[0].value]"
                    },
                    {
                        "name": "storageAccountName",
                        "value": "[parameters('storageAccountName')]"
                    },
                    {
                        "name": "sqlServerName",
                        "value": "[parameters('sqlServerName')]"
                    },
                    {
                        "name": "resourceGroup",
                        "value": "[resourceGroup().name]"
                    }                                                             
                  ],
                "primaryScriptUri": "https://raw.githubusercontent.com/bramplouvier/azure-sql-wwi/main/infra/setupSampleDatabase.sh",
                "cleanupPreference": "Always",
                "retentionInterval": "P1D"
            }
        }
    ]
}
